{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/dongzhiping/Desktop/FE/wow/client/components/mainPage/TopBar.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Buttom } from \"react-native-web/dist/index\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { openFilter, closeFilter, openSetting, closeSetting } from \"../../actions/mainPageActions\";\n\nvar TopBar = function (_React$Component) {\n  _inherits(TopBar, _React$Component);\n\n  var _super = _createSuper(TopBar);\n\n  function TopBar() {\n    var _this;\n\n    _classCallCheck(this, TopBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.openFilter = function () {\n      _this.props.openFilter();\n    };\n\n    _this.closeFilter = function () {\n      _this.props.closeFilter();\n    };\n\n    _this.openSetting = function () {\n      _this.props.openSetting();\n    };\n\n    _this.closeSetting = function () {\n      _this.props.closeSetting();\n    };\n\n    return _this;\n  }\n\n  _createClass(TopBar, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.logoContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        style: styles.logo,\n        source: require(\"./icon/wow.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }\n      }))), React.createElement(TouchableOpacity, {\n        style: this.props.currentPage === \"Discover\" && this.props.filterStatus === \"close\" ? styles.icon : {\n          display: 'none'\n        },\n        onPress: this.openFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        style: styles.topRightBtn,\n        source: require(\"./icon/filter.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: this.props.currentPage === \"Discover\" && this.props.filterStatus === \"open\" ? styles.icon : {\n          display: 'none'\n        },\n        onPress: this.closeFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        style: styles.topRightBtn,\n        source: require(\"./icon/filterc.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: this.props.currentPage !== \"Discover\" && this.props.settingStatus === \"close\" ? styles.icon : {\n          display: 'none'\n        },\n        onPress: this.openSetting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        style: styles.topRightBtn,\n        source: require(\"./icon/setting.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: this.props.currentPage !== \"Discover\" && this.props.settingStatus === \"open\" ? styles.icon : {\n          display: 'none'\n        },\n        onPress: this.closeSetting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        style: styles.topRightBtn,\n        source: require(\"./icon/settingc.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return TopBar;\n}(React.Component);\n\nvar deviceWitdth = Dimensions.get('window').width;\nvar deviceHeight = Dimensions.get('window').height;\nvar styles = StyleSheet.create({\n  container: {\n    left: 0,\n    width: deviceWitdth,\n    height: deviceHeight * 0.08,\n    backgroundColor: '#FAFAFA',\n    borderWidth: 1,\n    borderColor: \"#C0C0C0\",\n    padding: 5,\n    zIndex: 9\n  },\n  logoContainer: {\n    position: 'absolute',\n    alignItems: 'center',\n    width: deviceWitdth,\n    height: deviceHeight * 0.08\n  },\n  logo: {\n    width: deviceWitdth * 0.15,\n    height: deviceWitdth * 0.15,\n    top: deviceHeight * 0.024\n  },\n  topRightBtn: {\n    position: 'absolute',\n    width: deviceWitdth * 0.05,\n    height: deviceWitdth * 0.05,\n    right: deviceWitdth * 0.025,\n    top: deviceHeight * 0.044\n  }\n});\n\nvar mapStatetoProps = function mapStatetoProps(state) {\n  return {\n    loginPageStatus: state.statusList.loginPageStatus,\n    mainPageStatus: state.statusList.mainPageStatus,\n    currentPage: state.statusList.currentPage,\n    filterStatus: state.statusList.filterStatus,\n    settingStatus: state.statusList.settingStatus\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    openFilter: openFilter,\n    closeFilter: closeFilter,\n    openSetting: openSetting,\n    closeSetting: closeSetting\n  }, dispatch);\n};\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(TopBar);","map":{"version":3,"sources":["/Users/dongzhiping/Desktop/FE/wow/client/components/mainPage/TopBar.js"],"names":["React","Buttom","connect","bindActionCreators","openFilter","closeFilter","openSetting","closeSetting","TopBar","props","styles","container","logoContainer","logo","require","currentPage","filterStatus","icon","display","topRightBtn","settingStatus","Component","deviceWitdth","Dimensions","get","width","deviceHeight","height","StyleSheet","create","left","backgroundColor","borderWidth","borderColor","padding","zIndex","position","alignItems","top","right","mapStatetoProps","state","loginPageStatus","statusList","mainPageStatus","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View , Text, StyleSheet, StatusBar, Image, Buttom, Dimensions,TouchableOpacity} from 'react-native'\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { openFilter,closeFilter,openSetting,closeSetting } from '../../actions/mainPageActions'\n\nclass TopBar extends React.Component {\n    openFilter = () => {\n        this.props.openFilter()\n    }\n    closeFilter = () => {\n        this.props.closeFilter()\n    }\n    openSetting = () => {\n        this.props.openSetting()\n    }\n    closeSetting = () => {\n        this.props.closeSetting()\n    }\n    render(){\n        return(\n            <View style={ styles.container }>\n                <View style={ styles.logoContainer }>\n                    <TouchableOpacity>\n                        <Image\n                            style={ styles.logo }\n                            source = {require('./icon/wow.png')}\n                        />\n                    </TouchableOpacity>\n                </View>\n                <TouchableOpacity \n                style={this.props.currentPage === \"Discover\" && this.props.filterStatus === \"close\" ? styles.icon : {display : 'none'}} \n                onPress={this.openFilter}>\n                    <Image\n                        style={ styles.topRightBtn }\n                        source = {require('./icon/filter.png')}\n                    />\n                </TouchableOpacity>\n                <TouchableOpacity \n                style={this.props.currentPage === \"Discover\" && this.props.filterStatus === \"open\" ? styles.icon : {display : 'none'}} \n                onPress={this.closeFilter}>\n                    <Image\n                        style={ styles.topRightBtn }\n                        source = {require('./icon/filterc.png')}\n                    />\n                </TouchableOpacity>\n                <TouchableOpacity \n                style={this.props.currentPage !== \"Discover\" && this.props.settingStatus === \"close\" ? styles.icon : {display : 'none'}} \n                onPress={this.openSetting}>\n                    <Image\n                        style={ styles.topRightBtn }\n                        source = {require('./icon/setting.png')}\n                    />\n                </TouchableOpacity>\n                <TouchableOpacity \n                style={this.props.currentPage !== \"Discover\" && this.props.settingStatus === \"open\" ? styles.icon : {display : 'none'}} \n                onPress={this.closeSetting}>\n                    <Image\n                        style={  styles.topRightBtn }\n                        source = {require('./icon/settingc.png')}\n                    />\n                </TouchableOpacity>\n            </View>\n        )\n    }\n\n}\nconst deviceWitdth = Dimensions.get('window').width\nconst deviceHeight = Dimensions.get('window').height\n\nconst styles = StyleSheet.create({\n    container:{\n        left:0,\n        width:deviceWitdth,\n        height: deviceHeight*0.08,\n        backgroundColor:'#FAFAFA',\n        borderWidth:1,\n        borderColor: \"#C0C0C0\",\n        padding: 5,\n        zIndex:9\n        \n    },\n    logoContainer:{\n        position: 'absolute',\n        alignItems: 'center',\n        width:deviceWitdth,\n        height: deviceHeight*0.08,\n    },\n    logo:{\n        width: deviceWitdth*0.15,\n        height: deviceWitdth*0.15,\n        top: deviceHeight*0.024,\n    },\n    topRightBtn:{\n        position: 'absolute',\n        width: deviceWitdth*0.05,\n        height: deviceWitdth*0.05,\n        right: deviceWitdth*0.025,\n        top: deviceHeight*0.044,\n    }\n}\n)\nconst mapStatetoProps = state =>{\n    return {\n        loginPageStatus : state.statusList.loginPageStatus,\n        mainPageStatus : state.statusList.mainPageStatus,\n        currentPage : state.statusList.currentPage,\n        filterStatus : state.statusList.filterStatus,\n        settingStatus : state.statusList.settingStatus,\n    }\n}\n\nconst mapDispatchToProps = dispatch =>\n        bindActionCreators({\n            openFilter,\n            closeFilter,\n            openSetting,\n            closeSetting\n        },dispatch)\n    \n\n\nexport default connect(mapStatetoProps,mapDispatchToProps)(TopBar);"]},"metadata":{},"sourceType":"module"}